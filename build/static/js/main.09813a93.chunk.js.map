{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","books","geography","mythology","sports","computers","entertainment","animal","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsModalOpen","fetchQuestions","url","a","manga","indexOf","split","axios","catch","err","console","log","response","data","slice","dataQ","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","toFixed","App","correct_answer","question","incorrect_answers","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","incorrectAnswers","correctAnswer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09813a93.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\nimport * as dataQ from './question.json';\n\nconst table = {\n  books: 10,\n  geography: 22,\n  mythology: 20,\n  sports: 21,\n  computers: 18,\n  entertainment: 'manga',\n  animal: 'animal',\n};\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?';\nconst MANGA_API_ENDPOINT = 'https://0228-final-project.can.canonic.dev/api/';\n\nconst tempUrl =\n  'https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 5,\n    category: 'books',\n    difficulty: 'easy',\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    let response,\n      manga = '',\n      animal = '';\n    if (url.indexOf('manga') != -1) {\n      animal = '';\n      manga = url.split('&');\n      response = await axios(manga[0]).catch((err) => console.log(err));\n    } else if (url.indexOf('animal') != -1) {\n      manga = '';\n      animal = url.split('&');\n      response = true;\n    } else {\n      manga = '';\n      animal = '';\n      response = await axios(url).catch((err) => console.log(err));\n    }\n    if (response) {\n      let data;\n      if (manga != '') {\n        data = response.data.data[0][manga[2]];\n        data = data.slice(0, manga[1]);\n      } else if (url.indexOf('animal') != -1) {\n        data = dataQ.default.results.slice(0, animal[1]);\n      } else data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    let url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    if (category === 'entertainment')\n      url = `${MANGA_API_ENDPOINT}${table[category]}&${amount}&${difficulty}`;\n    else if (category === 'animal') url = `${table[category]}&${amount}`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport { useGlobalContext } from './context';\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n  return (\n    <main>\n      <section className='quiz quiz-small'>\n        <form className='setup-form'>\n          <h2>Quiz</h2>\n          {/* amount */}\n          <div className='form-control'>\n            <label htmlFor='amount'>Number of questions</label>\n            <input\n              type='number'\n              name='amount'\n              id='amount'\n              value={quiz.amount}\n              onChange={handleChange}\n              className='form-input'\n              min={1}\n              max={10}\n            />\n          </div>\n          {/* category */}\n\n          <div className='form-control'>\n            <label htmlFor='category'>Category</label>\n            <select\n              name='category'\n              id='category'\n              className='form-input'\n              value={quiz.category}\n              onChange={handleChange}\n            >\n              <option value='books'>Books</option>\n              <option value='geography'>Geography</option>\n              <option value='mythology'>Mythology</option>\n              <option value='sports'>Sports</option>\n              <option value='computers'>Computers</option>\n              <option value='entertainment'>Entertainment</option>\n              <option value='animal'>Animal</option>\n            </select>\n          </div>\n          {/* difficulty */}\n\n          <div className='form-control'>\n            <label htmlFor='difficulty'>Select Difficulty</label>\n            <select\n              name='difficulty'\n              id='difficulty'\n              className='form-input'\n              value={quiz.difficulty}\n              onChange={handleChange}\n            >\n              <option value='easy'>Easy</option>\n              <option value='medium'>Medium</option>\n              <option value='hard'>Hard</option>\n            </select>\n          </div>\n          {error && (\n            <p className='error'>\n              Sorry, We couldn't generate your request! Try it again.\n            </p>\n          )}\n          <button type='submit' onClick={handleSubmit} className='submit-btn'>\n            start\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext()\n  return (\n    <div\n      className={`${\n        isModalOpen ? 'modal-container isOpen' : 'modal-container'\n      }`}\n    >\n      <div className='modal-content'>\n        <h2>Conglatulations!</h2>\n        <p>\n          You answered {((correct / questions.length) * 100).toFixed(0)}% of\n          questions correctly\n        </p>\n        <button className='close-btn' onClick={closeModal}>\n          Play again\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react';\nimport { useGlobalContext } from './context';\n\nimport SetupForm from './SetupForm';\nimport Loading from './Loading';\nimport Modal from './Modal';\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (questions[index].correct_answer) {\n    const { question, incorrect_answers, correct_answer } = questions[index];\n\n    // const answers = [...incorrect_answers, correct_answer]\n    let answers = [...incorrect_answers];\n    const tempIndex = Math.floor(Math.random() * 4);\n    if (tempIndex === 3) {\n      answers.push(correct_answer);\n    } else {\n      answers.push(answers[tempIndex]);\n      answers[tempIndex] = correct_answer;\n    }\n    return (\n      <main>\n        <Modal />\n        <section className='quiz'>\n          <p className='correct-answers'>\n            correct answers : {correct}/{index}\n          </p>\n          <article className='container'>\n            <h2 dangerouslySetInnerHTML={{ __html: question }} />\n            <div className='btn-container'>\n              {answers.map((answer, index) => {\n                return (\n                  <button\n                    key={index}\n                    className='answer-btn'\n                    onClick={() => checkAnswer(correct_answer === answer)}\n                    dangerouslySetInnerHTML={{ __html: answer }}\n                  />\n                );\n              })}\n            </div>\n          </article>\n          <button className='next-question' onClick={nextQuestion}>\n            next question\n          </button>\n        </section>\n      </main>\n    );\n  } else {\n    const { question, incorrectAnswers, correctAnswer } = questions[index];\n\n    let answers = incorrectAnswers.split(',');\n    const tempIndex = Math.floor(Math.random() * 4);\n    if (tempIndex === 3) {\n      answers.push(correctAnswer);\n    } else {\n      answers.push(answers[tempIndex]);\n      answers[tempIndex] = correctAnswer;\n    }\n    return (\n      <main>\n        <Modal />\n        <section className='quiz'>\n          <p className='correct-answers'>\n            correct answers : {correct}/{index}\n          </p>\n          <article className='container'>\n            <h2 dangerouslySetInnerHTML={{ __html: question }} />\n            <div className='btn-container'>\n              {answers.map((answer, index) => {\n                return (\n                  <button\n                    key={index}\n                    className='answer-btn'\n                    onClick={() => checkAnswer(correctAnswer === answer)}\n                    dangerouslySetInnerHTML={{ __html: answer }}\n                  />\n                );\n              })}\n            </div>\n          </article>\n          <button className='next-question' onClick={nextQuestion}>\n            next question\n          </button>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}